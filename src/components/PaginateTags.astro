---
import type { MarkdownInstance, Page } from "astro";
import type { Frontmatter } from "~/utils/misc";

export interface Props {
  page: Page<MarkdownInstance<Frontmatter>>;
  dir: string;
}

const { page, dir } = Astro.props as Props;
const baseSite = import.meta.env.BASE_URL;
baseSite;
const tags: string = "tags/";
---

<div class="btn-group justify-center mt-12">
  {
    page.currentPage !== 1 && page.currentPage !== 2 ? (
      <>
        <a href={`${baseSite}${tags}${dir}/`} class="btn">
          1
        </a>
      </>
    ) : null
  }

  {
    page.url.prev ? (
      <>
        <a class="btn" href={baseSite + page.url.prev.slice(1)}>
          {page.currentPage - 1}
        </a>
      </>
    ) : null
  }

  <a
    href={baseSite + page.url.current.slice(1)}
    class="btn btn-active btn-disabled">{page.currentPage}</a
  >

  {
    page.url.next ? (
      <>
        <a class="btn" href={baseSite + page.url.next.slice(1)}>
          {page.currentPage + 1}
        </a>
      </>
    ) : null
  }

  {
    page.currentPage !== page.lastPage &&
    page.currentPage + 1 !== page.lastPage ? (
      <>
        <a href={`${baseSite}${tags}${dir}/${page.lastPage}/`} class="btn">
          {page.lastPage}
        </a>
      </>
    ) : null
  }
</div>
