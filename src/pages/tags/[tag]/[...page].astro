---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import ArticleCard from "@components/ArticleCard.astro";
import PaginateTags from "@components/PaginateTags.astro";

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const allPosts = await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  });

  let uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  uniqueTags = uniqueTags.filter((tag) => tag);

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags?.includes(tag as string)
    );

    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 5,
    });
  });
}

const { page } = Astro.props;
const { tag } = Astro.params;

const data = page.data.map((post: any) => ({
  id: post.id,
  slug: post.slug,
  tags: post.tags,
  ...post.data,
}));
---

<BaseLayout
  title={`Posts tagged with ${tag}`}
  description={`Posts tagged with ${tag}`}
>
  <main class="mt-24 flex flex-col gap-2 p-4">
    <h1
      class="text-center text-3xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-orange-500 to-pink-600"
    >
      Posts tagged with {tag}
    </h1>
    <ul class="flex flex-col gap-3">
      {
        data.map((post: any) => (
          <ArticleCard
            key={post.id}
            title={post.title}
            description={post.description}
            slug={post.slug}
            tags={post.tags}
            heroImage={post.heroImage}
            route="/blog"
          />
        ))
      }
    </ul>
    <div class="flex justify-center items-center">
      <PaginateTags page={page} dir={tag.toString()} />
    </div>
  </main>
</BaseLayout>
